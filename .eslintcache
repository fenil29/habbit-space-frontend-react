[{"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\index.js":"1","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\App.js":"2","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\reportWebVitals.js":"3","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\Home.jsx":"4","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\Logo.jsx":"5","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\Login.jsx":"6","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\navbar-home\\HomeNavBar.jsx":"7","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\SignUp.jsx":"8","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\home-page\\HomePage.jsx":"9","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppHome.js":"10","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\AppNavBar.jsx":"11","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\theme.js":"12","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppOption.js":"13","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\calendar\\Calendar.js":"14","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\DarkModeButton.jsx":"15","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AddHabitModel.js":"16","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\Constants.js":"17","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\context\\GlobalState.js":"18","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\DefaultRoute.js":"19","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\AppRoute.js":"20","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\HabitView.js":"21"},{"size":833,"mtime":1615034749654,"results":"22","hashOfConfig":"23"},{"size":1768,"mtime":1615095615413,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":223,"mtime":1612097271881,"results":"26","hashOfConfig":"23"},{"size":152,"mtime":1610867159132,"results":"27","hashOfConfig":"23"},{"size":3050,"mtime":1615112207617,"results":"28","hashOfConfig":"23"},{"size":594,"mtime":1612277418901,"results":"29","hashOfConfig":"23"},{"size":3110,"mtime":1615112207617,"results":"30","hashOfConfig":"23"},{"size":504,"mtime":1612096786400,"results":"31","hashOfConfig":"23"},{"size":1949,"mtime":1615109988044,"results":"32","hashOfConfig":"23"},{"size":1180,"mtime":1615110001024,"results":"33","hashOfConfig":"23"},{"size":579,"mtime":1612600701581,"results":"34","hashOfConfig":"23"},{"size":5941,"mtime":1615117608887,"results":"35","hashOfConfig":"23"},{"size":8383,"mtime":1615124481178,"results":"36","hashOfConfig":"23"},{"size":1330,"mtime":1614960543743,"results":"37","hashOfConfig":"23"},{"size":2270,"mtime":1615027363036,"results":"38","hashOfConfig":"23"},{"size":226,"mtime":1615116202885,"results":"39","hashOfConfig":"23"},{"size":1855,"mtime":1615109833931,"results":"40","hashOfConfig":"23"},{"size":732,"mtime":1615053665128,"results":"41","hashOfConfig":"23"},{"size":672,"mtime":1615022715827,"results":"42","hashOfConfig":"23"},{"size":6344,"mtime":1615127393957,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1uutwu1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\index.js",[],["94","95"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\App.js",["96","97"],"import React, { useContext } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./component/home/Home\";\nimport \"./App.scss\";\nimport HomeNavBar from \"./component/home/navbar-home/HomeNavBar\";\nimport Login from \"./component/home/login/Login\";\nimport SignUp from \"./component/home/login/SignUp\";\nimport AppNavBar from \"./component/app/navbar-app/AppNavBar\";\nimport AppHome from \"./component/app/AppHome\";\nimport DefaultRoute from \"./authentication/DefaultRoute\";\nimport AppRoute from \"./authentication/AppRoute\";\n\nimport { GlobalContext } from \"./context/GlobalState\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  \n  const contextData = useContext(GlobalContext);\n\n  return (\n    <>\n      {contextData.isLoaded ? (\n        <Switch>\n          <DefaultRoute\n            path=\"/\"\n            exact\n            component={() => (\n              <>\n                <HomeNavBar />\n                <Home />\n              </>\n            )}\n          />\n          <DefaultRoute\n            exact\n            path=\"/login\"\n            component={() => (\n              <>\n                <HomeNavBar />\n                <Login />\n              </>\n            )}\n          />\n\n          <DefaultRoute\n            exact\n            path=\"/signup\"\n            component={() => (\n              <>\n                <HomeNavBar />\n                <SignUp />\n              </>\n            )}\n          />\n\n          <AppRoute\n            path=\"/app\"\n            component={() => (\n              <>\n                <AppNavBar />\n                <AppHome />\n              </>\n            )}\n          />\n        </Switch>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\reportWebVitals.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\Home.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\Logo.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\Login.jsx",["98","99"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  useToast,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { API_URL, GOOGLE_AUTH_CLIENT_ID } from \"../../../Constants\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const contextStore = useContext(GlobalContext);\r\n\r\n  const [noAccountFoundError, setNoAccountFoundError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    // effect\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n\r\n  const responseGoogle = (response) => {\r\n    // console.log(response);\r\n    setLoading(true);\r\n    axios\r\n      .post(API_URL + \"/api/login-with-google\", {\r\n        token: response.tokenId,\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        console.log(response.data);\r\n        response.data.isLoggedIn = true;\r\n        contextStore.setLoginData(response.data);\r\n        history.push(\"/app\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n\r\n        console.log(\r\n          error.response.status === 404 &&\r\n            error.response.data === \"User not found\"\r\n        );\r\n        if (\r\n          error.response.status === 404 &&\r\n          error.response.data === \"User not found\"\r\n        ) {\r\n          setNoAccountFoundError(true);\r\n        } else {\r\n          contextStore.showUnexpectedError();\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"login\">\r\n      <Center>\r\n        <h1>Log In</h1>\r\n      </Center>\r\n      <Divider />\r\n      <Center>\r\n        <GoogleLogin\r\n          className=\"google-login-button\"\r\n          clientId={GOOGLE_AUTH_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={(renderProps) => (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n              leftIcon={<Icon as={FcGoogle} />}\r\n              className=\"google-login-button\"\r\n              onClick={renderProps.onClick}\r\n            >\r\n              Login with Google\r\n              {loading && <Spinner size=\"sm\" ml={3} />}\r\n            </Button>\r\n          )}\r\n        />\r\n      </Center>\r\n      {noAccountFoundError && (\r\n        <Alert status=\"warning\" alignItems=\"center\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>Could not find your Account.</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              If you are new, Please consider Sign Up.\r\n            </AlertDescription>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\navbar-home\\HomeNavBar.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\SignUp.jsx",["100","101"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  useToast,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { API_URL, GOOGLE_AUTH_CLIENT_ID } from \"../../../Constants\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction SignUp() {\r\n  let history = useHistory();\r\n  const contextStore = useContext(GlobalContext);\r\n  const [userAlreadyExistsError, setUserAlreadyExistsError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  useEffect(() => {\r\n    // effect\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post(API_URL + \"/api/signup-with-google\", {\r\n        token: response.tokenId,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          setLoading(false);\r\n\r\n          console.log(response.data);\r\n          response.data.isLoggedIn = true;\r\n          contextStore.setLoginData(response.data);\r\n          history.push(\"/app\");\r\n        },\r\n        (error) => {\r\n          setLoading(false);\r\n\r\n          console.log(error.response &&\r\n            error.response.status === 409 &&\r\n              error.response.data === \"User already exists\"\r\n          );\r\n          if (error.response &&\r\n            error.response.status === 409 &&\r\n            error.response.data === \"User already exists\"\r\n          ) {\r\n            setUserAlreadyExistsError(true);\r\n          } else {\r\n            contextStore.showUnexpectedError();\r\n\r\n          }\r\n        }\r\n      );\r\n  };\r\n  return (\r\n    <Box className=\"login\">\r\n      <Center>\r\n        <h1>Sign Up</h1>\r\n      </Center>\r\n      <Divider />\r\n      <Center>\r\n        <GoogleLogin\r\n          className=\"google-login-button\"\r\n          clientId={GOOGLE_AUTH_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={(renderProps) => (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n              leftIcon={<Icon as={FcGoogle} />}\r\n              className=\"google-login-button\"\r\n              onClick={renderProps.onClick}\r\n            >\r\n              SignUp with Google\r\n              {loading && <Spinner size=\"sm\" ml={3} />}\r\n            </Button>\r\n          )}\r\n        />\r\n      </Center>\r\n      {userAlreadyExistsError && (\r\n        <Alert status=\"warning\" alignItems=\"center\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>You Already have an account</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              Please use Login.\r\n            </AlertDescription>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\home-page\\HomePage.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppHome.js",["102","103","104","105","106","107","108","109","110"],"import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport \"./AppHome.scss\";\r\n\r\nimport AppOption from \"./AppOption\";\r\nimport HabitView from \"./HabitView\";\r\nlet habitsDateInfo = {};\r\nfunction AppHome() {\r\n  console.log(\"habitsDateInfo Rendering\");\r\n  const {\r\n    isOpen:isSideDrawerOpen,\r\n    onOpen:onSideDrawerOpen,\r\n    onClose:onSideDrawerClose,\r\n  } = useDisclosure();\r\n\r\n  let addHabitsDateInfo = (habit_id, data) => {\r\n    habitsDateInfo[habit_id] = data;\r\n  };\r\n  useEffect(() => {\r\n    // effect\r\n    // console.log(\"render AppHome\");\r\n\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  return (\r\n    <Box className=\"app-home\" boxShadow=\"xl\">\r\n      <AppOption isSideDrawerOpen={isSideDrawerOpen}  onSideDrawerOpen={onSideDrawerOpen} onSideDrawerClose={onSideDrawerClose}/>\r\n      {/* <Button colorScheme=\"teal\" onClick={onOpen}>\r\n        Open\r\n      </Button> */}\r\n      {/* <Drawer isOpen={isOpen} placement=\"left\" onClose={onClose}>\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader borderBottomWidth=\"1px\">Habit Tracker</DrawerHeader>\r\n\r\n            <DrawerBody p={0}>\r\n              <AppOption type=\"drawer\" />\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer> */}\r\n\r\n      <Switch>\r\n        <Route\r\n          path=\"/app/habit/:habit_id\"\r\n          exact\r\n          component={() => (\r\n            <HabitView\r\n            onSideDrawerOpen={onSideDrawerOpen}\r\n              habitsDateInfo={habitsDateInfo}\r\n              addHabitsDateInfo={addHabitsDateInfo}\r\n            />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AppHome;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\AppNavBar.jsx",["111"],"import React, { useContext } from \"react\";\r\nimport Logo from \"../../Logo\";\r\nimport \"./AppNavBar.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport DarkModeButton from \"./DarkModeButton\";\r\n\r\n\r\nfunction AppNavBar() {\r\n\r\n  return (\r\n    <div className=\"nav-bar\">\r\n      <div className=\"nav-bar-content\">\r\n        <Link to=\"/\">\r\n          <Logo />\r\n        </Link>\r\n        <div className=\"right\">\r\n          <DarkModeButton />\r\n          <Menu>\r\n            <MenuButton\r\n              as={Button}\r\n              rightIcon={<ChevronDownIcon />}\r\n              customColor=\"light-blue\"\r\n            >\r\n              Fenil Kaneria\r\n            </MenuButton>\r\n            <MenuList>\r\n              <MenuItem>App</MenuItem>\r\n              <MenuItem>Settings</MenuItem>\r\n              <MenuItem>Account</MenuItem>\r\n              <MenuDivider />\r\n              <MenuItem>Sign Out</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppNavBar;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\theme.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppOption.js",["112","113","114","115","116","117"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\calendar\\Calendar.js",["118"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\DarkModeButton.jsx",["119","120"],"import React, { useEffect } from \"react\";\r\nimport { Button, useColorMode } from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nlet colorList = [\r\n  \"--primary-color\",\r\n  \"--primary-color-hover\",\r\n  // \"--primary-background-color\",\r\n  \"--secondary-background-color\",\r\n  \"--secondary-background-color-hover\",\r\n  \"--primary-font-color\",\r\n  // \"--secondary-font-color\",\r\n];\r\n\r\nfunction DarkModeButton() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  let toggleColorModeCustom = () => {\r\n    toggleColorMode();\r\n  };\r\n  let AdjustCustomColorMode = () => {\r\n    for (let i of colorList) {\r\n      document.documentElement.style.setProperty(\r\n        i,\r\n        colorMode === \"light\"\r\n          ? `var(--light-mode${i.slice(1)})`\r\n          : `var(--dark-mode${i.slice(1)})`\r\n      );\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    console.log(colorMode);\r\n    AdjustCustomColorMode();\r\n  }, [colorMode]);\r\n\r\n  useEffect(() => {\r\n    // effect\r\n    AdjustCustomColorMode();\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  return (\r\n    <Button\r\n      size=\"md\"\r\n      margin=\"5px\"\r\n      onClick={toggleColorModeCustom}\r\n      customColor=\"light-blue\"\r\n    >\r\n      {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default DarkModeButton;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AddHabitModel.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\Constants.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\context\\GlobalState.js",["121","122","123","124","125"],"import React, { createContext, useState, useEffect, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useToast, Box,useDisclosure } from \"@chakra-ui/react\";\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nfunction GlobalState(props) {\r\n  const toast = useToast();\r\n\r\n  const [loginData, setLoginData] = useState({ isLoggedIn: false });\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  let setLoginDataL = (data) => {\r\n    setLoginData(data);\r\n    localStorage.setItem(\"loginData\", JSON.stringify(data));\r\n  };\r\n  let loadData = () => {\r\n    if (!isLoaded) {\r\n      let loginDataLocal = JSON.parse(localStorage.getItem(\"loginData\"));\r\n      if (!(loginDataLocal === null)) {\r\n        setLoginData(loginDataLocal);\r\n      }\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n  let clearLoginDataAndRedirectToLogin = () => {\r\n    setLoginDataL({ isLoggedIn: false });\r\n    toast({\r\n      title: \"Session Has Expired\",\r\n      description: \"Please Login again!\",\r\n      status: \"warning\",\r\n      position: \"bottom-left\",\r\n      duration: 3000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  let showUnexpectedError = () => {\r\n    toast({\r\n      title: \"An unexpected error occurred.\",\r\n      description: \"Please try again!\",\r\n      status: \"error\",\r\n      position: \"bottom-left\",\r\n      duration: 3000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <GlobalContext.Provider\r\n        value={{\r\n          loginData,\r\n          isLoaded,\r\n          setLoginData: setLoginDataL,\r\n          clearLoginDataAndRedirectToLogin,\r\n          showUnexpectedError,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </GlobalContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GlobalState;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\DefaultRoute.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\AppRoute.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\HabitView.js",["126","127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":27,"nodeType":"135","messageId":"136","endLine":3,"endColumn":33},{"ruleId":"133","severity":1,"message":"137","line":3,"column":43,"nodeType":"135","messageId":"136","endLine":3,"endColumn":48},{"ruleId":"133","severity":1,"message":"138","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"139","line":9,"column":3,"nodeType":"135","messageId":"136","endLine":9,"endColumn":11},{"ruleId":"133","severity":1,"message":"138","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"140","line":29,"column":9,"nodeType":"135","messageId":"136","endLine":29,"endColumn":14},{"ruleId":"133","severity":1,"message":"141","line":1,"column":28,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"142","line":6,"column":3,"nodeType":"135","messageId":"136","endLine":6,"endColumn":9},{"ruleId":"133","severity":1,"message":"143","line":7,"column":3,"nodeType":"135","messageId":"136","endLine":7,"endColumn":13},{"ruleId":"133","severity":1,"message":"144","line":8,"column":3,"nodeType":"135","messageId":"136","endLine":8,"endColumn":15},{"ruleId":"133","severity":1,"message":"145","line":9,"column":3,"nodeType":"135","messageId":"136","endLine":9,"endColumn":15},{"ruleId":"133","severity":1,"message":"146","line":10,"column":3,"nodeType":"135","messageId":"136","endLine":10,"endColumn":16},{"ruleId":"133","severity":1,"message":"147","line":11,"column":3,"nodeType":"135","messageId":"136","endLine":11,"endColumn":16},{"ruleId":"133","severity":1,"message":"148","line":12,"column":3,"nodeType":"135","messageId":"136","endLine":12,"endColumn":20},{"ruleId":"133","severity":1,"message":"149","line":13,"column":3,"nodeType":"135","messageId":"136","endLine":13,"endColumn":9},{"ruleId":"133","severity":1,"message":"150","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":27},{"ruleId":"133","severity":1,"message":"151","line":1,"column":50,"nodeType":"135","messageId":"136","endLine":1,"endColumn":65},{"ruleId":"133","severity":1,"message":"152","line":2,"column":19,"nodeType":"135","messageId":"136","endLine":2,"endColumn":29},{"ruleId":"133","severity":1,"message":"144","line":14,"column":3,"nodeType":"135","messageId":"136","endLine":14,"endColumn":15},{"ruleId":"133","severity":1,"message":"153","line":20,"column":20,"nodeType":"135","messageId":"136","endLine":20,"endColumn":34},{"ruleId":"133","severity":1,"message":"154","line":20,"column":36,"nodeType":"135","messageId":"136","endLine":20,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":95,"column":6,"nodeType":"157","endLine":95,"endColumn":8,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":48,"column":6,"nodeType":"157","endLine":48,"endColumn":8,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"161","line":34,"column":6,"nodeType":"157","endLine":34,"endColumn":17,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":42,"column":6,"nodeType":"157","endLine":42,"endColumn":8,"suggestions":"164"},{"ruleId":"133","severity":1,"message":"165","line":1,"column":53,"nodeType":"135","messageId":"136","endLine":1,"endColumn":59},{"ruleId":"133","severity":1,"message":"138","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"152","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":26},{"ruleId":"133","severity":1,"message":"166","line":3,"column":20,"nodeType":"135","messageId":"136","endLine":3,"endColumn":23},{"ruleId":"133","severity":1,"message":"167","line":3,"column":24,"nodeType":"135","messageId":"136","endLine":3,"endColumn":37},{"ruleId":"133","severity":1,"message":"149","line":4,"column":32,"nodeType":"135","messageId":"136","endLine":4,"endColumn":38},{"ruleId":"133","severity":1,"message":"168","line":21,"column":10,"nodeType":"135","messageId":"136","endLine":21,"endColumn":29},{"ruleId":"155","severity":1,"message":"169","line":151,"column":6,"nodeType":"157","endLine":151,"endColumn":8,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'useToast' is defined but never used.","'toast' is assigned a value but never used.","'useState' is defined but never used.","'Drawer' is defined but never used.","'DrawerBody' is defined but never used.","'DrawerFooter' is defined but never used.","'DrawerHeader' is defined but never used.","'DrawerOverlay' is defined but never used.","'DrawerContent' is defined but never used.","'DrawerCloseButton' is defined but never used.","'Button' is defined but never used.","'useContext' is defined but never used.","'useLayoutEffect' is defined but never used.","'useHistory' is defined but never used.","'SkeletonCircle' is defined but never used.","'SkeletonText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHabit'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has missing dependencies: 'WEEKDAYS', 'createCalendar', and 'initMonthSelectors'. Either include them or remove the dependency array.",["174"],"React Hook React.useEffect has a missing dependency: 'AdjustCustomColorMode'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'AdjustCustomColorMode'. Either include it or remove the dependency array.",["176"],"'useRef' is defined but never used.","'Box' is defined but never used.","'useDisclosure' is defined but never used.","'getHabitDateLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getHabitDate'. Either include it or remove the dependency array.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [getHabit]",{"range":"188","text":"189"},"Update the dependencies array to be: [WEEKDAYS, createCalendar, initMonthSelectors]",{"range":"190","text":"191"},"Update the dependencies array to be: [AdjustCustomColorMode, colorMode]",{"range":"192","text":"193"},"Update the dependencies array to be: [AdjustCustomColorMode]",{"range":"194","text":"195"},"Update the dependencies array to be: [getHabitDate]",{"range":"196","text":"197"},[2565,2567],"[getHabit]",[1298,1300],"[WEEKDAYS, createCalendar, initMonthSelectors]",[932,943],"[AdjustCustomColorMode, colorMode]",[1066,1068],"[AdjustCustomColorMode]",[5144,5146],"[getHabitDate]"]