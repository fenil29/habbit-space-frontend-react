[{"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\index.js":"1","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\App.js":"2","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\reportWebVitals.js":"3","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\Home.jsx":"4","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\Logo.jsx":"5","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\Login.jsx":"6","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\navbar-home\\HomeNavBar.jsx":"7","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\SignUp.jsx":"8","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\home-page\\HomePage.jsx":"9","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppHome.js":"10","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\AppNavBar.jsx":"11","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\theme.js":"12","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppOption.js":"13","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppContent.js":"14","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\calendar\\Calendar.js":"15","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\DarkModeButton.jsx":"16","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AddHabitModel.js":"17","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\Constants.js":"18","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\context\\GlobalState.js":"19","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\DefaultRoute.js":"20","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\AppRoute.js":"21"},{"size":833,"mtime":1614838076910,"results":"22","hashOfConfig":"23"},{"size":1414,"mtime":1615018002462,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":223,"mtime":1612097271881,"results":"26","hashOfConfig":"23"},{"size":152,"mtime":1610867159132,"results":"27","hashOfConfig":"23"},{"size":3247,"mtime":1615022190687,"results":"28","hashOfConfig":"23"},{"size":594,"mtime":1612277418901,"results":"29","hashOfConfig":"23"},{"size":3290,"mtime":1615022190691,"results":"30","hashOfConfig":"23"},{"size":504,"mtime":1612096786400,"results":"31","hashOfConfig":"23"},{"size":363,"mtime":1612277418901,"results":"32","hashOfConfig":"23"},{"size":1103,"mtime":1614960490584,"results":"33","hashOfConfig":"23"},{"size":579,"mtime":1612600701581,"results":"34","hashOfConfig":"23"},{"size":2461,"mtime":1615022190670,"results":"35","hashOfConfig":"23"},{"size":327,"mtime":1612341432638,"results":"36","hashOfConfig":"23"},{"size":6417,"mtime":1612277418901,"results":"37","hashOfConfig":"23"},{"size":1330,"mtime":1614960543743,"results":"38","hashOfConfig":"23"},{"size":1097,"mtime":1614960576568,"results":"39","hashOfConfig":"23"},{"size":226,"mtime":1614838550775,"results":"40","hashOfConfig":"23"},{"size":1155,"mtime":1615022190633,"results":"41","hashOfConfig":"23"},{"size":726,"mtime":1614950918665,"results":"42","hashOfConfig":"23"},{"size":735,"mtime":1615022264467,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1uutwu1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\index.js",[],["92","93"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\App.js",["94"],"import { Switch, Route } from \"react-router-dom\";\nimport Home from \"./component/home/Home\";\nimport \"./App.scss\";\nimport HomeNavBar from \"./component/home/navbar-home/HomeNavBar\";\nimport Login from \"./component/home/login/Login\";\nimport SignUp from \"./component/home/login/SignUp\";\nimport AppNavBar from \"./component/app/navbar-app/AppNavBar\";\nimport AppHome from \"./component/app/AppHome\";\nimport DefaultRoute from \"./authentication/DefaultRoute\";\nimport AppRoute from \"./authentication/AppRoute\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <DefaultRoute\n          path=\"/\"\n          exact\n          component={() => (\n            <>\n              <HomeNavBar />\n              <Home />\n            </>\n          )}\n        />\n        <DefaultRoute\n          path=\"/login\"\n          component={() => (\n            <>\n              <HomeNavBar />\n              <Login />\n            </>\n          )}\n        />\n\n        <DefaultRoute\n          path=\"/signup\"\n          component={() => (\n            <>\n              <HomeNavBar />\n              <SignUp />\n            </>\n          )}\n        />\n\n        <AppRoute\n          path=\"/app\"\n          component={() => (\n            <>\n              <AppNavBar />\n              <AppHome />\n            </>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\reportWebVitals.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\Home.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\Logo.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\Login.jsx",["95"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  useToast,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { API_URL, GOOGLE_AUTH_CLIENT_ID } from \"../../../Constants\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const contextData = useContext(GlobalContext);\r\n\r\n  const [noAccountFoundError, setNoAccountFoundError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  useEffect(() => {\r\n    // effect\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n\r\n  const responseGoogle = (response) => {\r\n    // console.log(response);\r\n    setLoading(true);\r\n    axios\r\n      .post(API_URL + \"/api/login-with-google\", {\r\n        token: response.tokenId,\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        console.log(response.data);\r\n        contextData.setLoginData(response.data);\r\n        history.push(\"/app\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n\r\n        console.log(\r\n          error.response.status === 404 &&\r\n            error.response.data === \"User not found\"\r\n        );\r\n        if (\r\n          error.response.status === 404 &&\r\n          error.response.data === \"User not found\"\r\n        ) {\r\n          setNoAccountFoundError(true);\r\n        } else {\r\n          toast({\r\n            title: \"An error occurred.\",\r\n            description: \"Please try again!\",\r\n            status: \"error\",\r\n            position: \"bottom-left\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"login\">\r\n      <Center>\r\n        <h1>Log In</h1>\r\n      </Center>\r\n      <Divider />\r\n      <Center>\r\n        <GoogleLogin\r\n          className=\"google-login-button\"\r\n          clientId={GOOGLE_AUTH_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={(renderProps) => (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n              leftIcon={<Icon as={FcGoogle} />}\r\n              className=\"google-login-button\"\r\n              onClick={renderProps.onClick}\r\n            >\r\n              Login with Google\r\n              {loading && <Spinner size=\"sm\" ml={3} />}\r\n            </Button>\r\n          )}\r\n        />\r\n      </Center>\r\n      {noAccountFoundError && (\r\n        <Alert status=\"warning\" alignItems=\"center\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>Could not find your Account.</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              If you are new, Please consider Sign Up.\r\n            </AlertDescription>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\navbar-home\\HomeNavBar.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\SignUp.jsx",["96"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  useToast,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { API_URL, GOOGLE_AUTH_CLIENT_ID } from \"../../../Constants\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction SignUp() {\r\n  let history = useHistory();\r\n  const contextData = useContext(GlobalContext);\r\n  const [userAlreadyExistsError, setUserAlreadyExistsError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  useEffect(() => {\r\n    // effect\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post(API_URL + \"/api/signup-with-google\", {\r\n        token: response.tokenId,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          setLoading(false);\r\n\r\n          console.log(response.data);\r\n          contextData.setLoginData(response.data);\r\n          history.push(\"/app\");\r\n        },\r\n        (error) => {\r\n          setLoading(false);\r\n\r\n          console.log(\r\n            error.response.status === 409 &&\r\n              error.response.data === \"User already exists\"\r\n          );\r\n          if (\r\n            error.response.status === 409 &&\r\n            error.response.data === \"User already exists\"\r\n          ) {\r\n            setUserAlreadyExistsError(true);\r\n          } else {\r\n            toast({\r\n              title: \"An error occurred.\",\r\n              description: \"Please try again!\",\r\n              status: \"error\",\r\n              position: \"bottom-left\",\r\n              duration: 3000,\r\n              isClosable: true,\r\n            });\r\n          }\r\n        }\r\n      );\r\n  };\r\n  return (\r\n    <Box className=\"login\">\r\n      <Center>\r\n        <h1>Sign Up</h1>\r\n      </Center>\r\n      <Divider />\r\n      <Center>\r\n        <GoogleLogin\r\n          className=\"google-login-button\"\r\n          clientId={GOOGLE_AUTH_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={(renderProps) => (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n              leftIcon={<Icon as={FcGoogle} />}\r\n              className=\"google-login-button\"\r\n              onClick={renderProps.onClick}\r\n            >\r\n              SignUp with Google\r\n              {loading && <Spinner size=\"sm\" ml={3} />}\r\n            </Button>\r\n          )}\r\n        />\r\n      </Center>\r\n      {userAlreadyExistsError && (\r\n        <Alert status=\"warning\" alignItems=\"center\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>You Already have an account</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              Please use Login.\r\n            </AlertDescription>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\home-page\\HomePage.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppHome.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\AppNavBar.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\theme.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppOption.js",["97","98","99"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./AppOption.scss\";\r\nimport {\r\n  Box,\r\n  Center,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport AddHabitModel from \"./AddHabitModel\";\r\nimport { API_URL } from \"../../Constants\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction AppOption() {\r\n  const contextData = useContext(GlobalContext);\r\n\r\n  const {\r\n    isOpen: isOpenAddHabitModel,\r\n    onOpen: onOpenAddHabitModel,\r\n    onClose: onCloseAddHabitModel,\r\n  } = useDisclosure();\r\n  let getHabit = () => {\r\n    axios\r\n      .get(API_URL + \"/api/habit\")\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (\r\n          error.response.status === 401 &&\r\n          error.response.data === \"Unauthorized\"\r\n        ) {\r\n          // contextData.setLoginData({ isLoggedIn: false })\r\n          // history.push(\"/login\");\r\n          console.log(error.response)\r\n          contextData.clearLoginDataAndRedirectToLogin();\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    // effect\r\n    getHabit();\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Box className=\"app-option\">\r\n        <Box className=\"title\">\r\n          <h2>All Habits</h2>\r\n        </Box>\r\n        <List>\r\n          <ListItem>Today</ListItem>\r\n        </List>\r\n        <br />\r\n\r\n        <Box className=\"title\">\r\n          <h2>Habits</h2>\r\n        </Box>\r\n        {/* <Divider /> */}\r\n        <List>\r\n          {/* <ListItem>\r\n            <ListIcon as={CheckIcon} />\r\n            Lorem ipsum dolor sit amet\r\n          </ListItem> */}\r\n          <ListItem>Reading</ListItem>\r\n          <ListItem>Learn Code</ListItem>\r\n          <ListItem>System Design</ListItem>\r\n        </List>\r\n        <Center className=\"add-habit-button-container\">\r\n          <Button\r\n            // colorScheme=\"blue\"\r\n            customColor=\"blue\"\r\n            // variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={onOpenAddHabitModel}\r\n          >\r\n            Add Habit\r\n          </Button>\r\n        </Center>\r\n        {/* add habit model */}\r\n        <AddHabitModel\r\n          isOpen={isOpenAddHabitModel}\r\n          onClose={onCloseAddHabitModel}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppOption;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppContent.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\calendar\\Calendar.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\DarkModeButton.jsx",["100","101"],"import React, { useEffect } from \"react\";\r\nimport { Button, useColorMode } from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nlet colorList = [\r\n  \"--primary-color\",\r\n  \"--primary-color-hover\",\r\n  // \"--primary-background-color\",\r\n  \"--secondary-background-color\",\r\n  \"--secondary-background-color-hover\",\r\n  \"--primary-font-color\",\r\n  // \"--secondary-font-color\",\r\n];\r\n\r\nfunction DarkModeButton() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  let toggleColorModeCustom = () => {\r\n    toggleColorMode();\r\n  };\r\n  let AdjustCustomColorMode = () => {\r\n    for (let i of colorList) {\r\n      document.documentElement.style.setProperty(\r\n        i,\r\n        colorMode === \"light\"\r\n          ? `var(--light-mode${i.slice(1)})`\r\n          : `var(--dark-mode${i.slice(1)})`\r\n      );\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    console.log(colorMode);\r\n    AdjustCustomColorMode();\r\n  }, [colorMode]);\r\n\r\n  useEffect(() => {\r\n    // effect\r\n    AdjustCustomColorMode();\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  return (\r\n    <Button\r\n      size=\"md\"\r\n      margin=\"5px\"\r\n      onClick={toggleColorModeCustom}\r\n      customColor=\"light-blue\"\r\n    >\r\n      {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default DarkModeButton;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AddHabitModel.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\Constants.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\context\\GlobalState.js",["102","103","104"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\DefaultRoute.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\AppRoute.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":18,"nodeType":"111","messageId":"112","endLine":1,"endColumn":23},{"ruleId":"109","severity":1,"message":"113","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"114","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":52,"column":6,"nodeType":"117","endLine":52,"endColumn":8,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":34,"column":6,"nodeType":"117","endLine":34,"endColumn":17,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":42,"column":6,"nodeType":"117","endLine":42,"endColumn":8,"suggestions":"122"},{"ruleId":"109","severity":1,"message":"123","line":1,"column":53,"nodeType":"111","messageId":"112","endLine":1,"endColumn":59},{"ruleId":"109","severity":1,"message":"113","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"124","line":7,"column":7,"nodeType":"111","messageId":"112","endLine":7,"endColumn":14},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHabit'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook React.useEffect has a missing dependency: 'AdjustCustomColorMode'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'AdjustCustomColorMode'. Either include it or remove the dependency array.",["129"],"'useRef' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [getHabit]",{"range":"136","text":"137"},"Update the dependencies array to be: [AdjustCustomColorMode, colorMode]",{"range":"138","text":"139"},"Update the dependencies array to be: [AdjustCustomColorMode]",{"range":"140","text":"141"},[1295,1297],"[getHabit]",[932,943],"[AdjustCustomColorMode, colorMode]",[1066,1068],"[AdjustCustomColorMode]"]