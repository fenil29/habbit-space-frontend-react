[{"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\index.js":"1","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\App.js":"2","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\reportWebVitals.js":"3","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\Home.jsx":"4","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\Logo.jsx":"5","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\Login.jsx":"6","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\navbar-home\\HomeNavBar.jsx":"7","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\SignUp.jsx":"8","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\home-page\\HomePage.jsx":"9","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppHome.js":"10","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\AppNavBar.jsx":"11","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\theme.js":"12","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppOption.js":"13","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\calendar\\Calendar.js":"14","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\DarkModeButton.jsx":"15","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AddHabitModel.js":"16","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\Constants.js":"17","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\context\\GlobalState.js":"18","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\DefaultRoute.js":"19","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\AppRoute.js":"20","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\HabitView.js":"21"},{"size":833,"mtime":1615034749654,"results":"22","hashOfConfig":"23"},{"size":1768,"mtime":1615095615413,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":223,"mtime":1612097271881,"results":"26","hashOfConfig":"23"},{"size":152,"mtime":1610867159132,"results":"27","hashOfConfig":"23"},{"size":3016,"mtime":1615022727634,"results":"28","hashOfConfig":"23"},{"size":594,"mtime":1612277418901,"results":"29","hashOfConfig":"23"},{"size":3076,"mtime":1615022760783,"results":"30","hashOfConfig":"23"},{"size":504,"mtime":1612096786400,"results":"31","hashOfConfig":"23"},{"size":1949,"mtime":1615109988044,"results":"32","hashOfConfig":"23"},{"size":1180,"mtime":1615110001024,"results":"33","hashOfConfig":"23"},{"size":579,"mtime":1612600701581,"results":"34","hashOfConfig":"23"},{"size":6077,"mtime":1615110166786,"results":"35","hashOfConfig":"23"},{"size":7993,"mtime":1615100342657,"results":"36","hashOfConfig":"23"},{"size":1330,"mtime":1614960543743,"results":"37","hashOfConfig":"23"},{"size":2270,"mtime":1615027363036,"results":"38","hashOfConfig":"23"},{"size":247,"mtime":1615101652309,"results":"39","hashOfConfig":"23"},{"size":1855,"mtime":1615109833931,"results":"40","hashOfConfig":"23"},{"size":732,"mtime":1615053665128,"results":"41","hashOfConfig":"23"},{"size":672,"mtime":1615022715827,"results":"42","hashOfConfig":"23"},{"size":4492,"mtime":1615109916065,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1uutwu1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\index.js",[],["93","94"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\App.js",["95","96"],"import React, { useContext } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./component/home/Home\";\nimport \"./App.scss\";\nimport HomeNavBar from \"./component/home/navbar-home/HomeNavBar\";\nimport Login from \"./component/home/login/Login\";\nimport SignUp from \"./component/home/login/SignUp\";\nimport AppNavBar from \"./component/app/navbar-app/AppNavBar\";\nimport AppHome from \"./component/app/AppHome\";\nimport DefaultRoute from \"./authentication/DefaultRoute\";\nimport AppRoute from \"./authentication/AppRoute\";\n\nimport { GlobalContext } from \"./context/GlobalState\";\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  \n  const contextData = useContext(GlobalContext);\n\n  return (\n    <>\n      {contextData.isLoaded ? (\n        <Switch>\n          <DefaultRoute\n            path=\"/\"\n            exact\n            component={() => (\n              <>\n                <HomeNavBar />\n                <Home />\n              </>\n            )}\n          />\n          <DefaultRoute\n            exact\n            path=\"/login\"\n            component={() => (\n              <>\n                <HomeNavBar />\n                <Login />\n              </>\n            )}\n          />\n\n          <DefaultRoute\n            exact\n            path=\"/signup\"\n            component={() => (\n              <>\n                <HomeNavBar />\n                <SignUp />\n              </>\n            )}\n          />\n\n          <AppRoute\n            path=\"/app\"\n            component={() => (\n              <>\n                <AppNavBar />\n                <AppHome />\n              </>\n            )}\n          />\n        </Switch>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\reportWebVitals.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\Home.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\Logo.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\Login.jsx",["97","98"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  useToast,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { API_URL, GOOGLE_AUTH_CLIENT_ID } from \"../../../Constants\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Login.scss\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const contextStore = useContext(GlobalContext);\r\n\r\n  const [noAccountFoundError, setNoAccountFoundError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    // effect\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n\r\n  const responseGoogle = (response) => {\r\n    // console.log(response);\r\n    setLoading(true);\r\n    axios\r\n      .post(API_URL + \"/api/login-with-google\", {\r\n        token: response.tokenId,\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        console.log(response.data);\r\n        response.data.isLoggedIn = true;\r\n        contextStore.setLoginData(response.data);\r\n        history.push(\"/app\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n\r\n        console.log(\r\n          error.response.status === 404 &&\r\n            error.response.data === \"User not found\"\r\n        );\r\n        if (\r\n          error.response.status === 404 &&\r\n          error.response.data === \"User not found\"\r\n        ) {\r\n          setNoAccountFoundError(true);\r\n        } else {\r\n          contextStore.showUnexpectedError();\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"login\">\r\n      <Center>\r\n        <h1>Log In</h1>\r\n      </Center>\r\n      <Divider />\r\n      <Center>\r\n        <GoogleLogin\r\n          className=\"google-login-button\"\r\n          clientId={GOOGLE_AUTH_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={(renderProps) => (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n              leftIcon={<Icon as={FcGoogle} />}\r\n              className=\"google-login-button\"\r\n              onClick={renderProps.onClick}\r\n            >\r\n              Login with Google\r\n              {loading && <Spinner size=\"sm\" ml={3} />}\r\n            </Button>\r\n          )}\r\n        />\r\n      </Center>\r\n      {noAccountFoundError && (\r\n        <Alert status=\"warning\" alignItems=\"center\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>Could not find your Account.</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              If you are new, Please consider Sign Up.\r\n            </AlertDescription>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\navbar-home\\HomeNavBar.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\login\\SignUp.jsx",["99"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  useToast,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { API_URL, GOOGLE_AUTH_CLIENT_ID } from \"../../../Constants\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction SignUp() {\r\n  let history = useHistory();\r\n  const contextData = useContext(GlobalContext);\r\n  const [userAlreadyExistsError, setUserAlreadyExistsError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  useEffect(() => {\r\n    // effect\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post(API_URL + \"/api/signup-with-google\", {\r\n        token: response.tokenId,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          setLoading(false);\r\n\r\n          console.log(response.data);\r\n          contextData.setLoginData(response.data);\r\n          history.push(\"/app\");\r\n        },\r\n        (error) => {\r\n          setLoading(false);\r\n\r\n          console.log(\r\n            error.response.status === 409 &&\r\n              error.response.data === \"User already exists\"\r\n          );\r\n          if (\r\n            error.response.status === 409 &&\r\n            error.response.data === \"User already exists\"\r\n          ) {\r\n            setUserAlreadyExistsError(true);\r\n          } else {\r\n            toast({\r\n              title: \"An error occurred.\",\r\n              description: \"Please try again!\",\r\n              status: \"error\",\r\n              position: \"bottom-left\",\r\n              duration: 3000,\r\n              isClosable: true,\r\n            });\r\n          }\r\n        }\r\n      );\r\n  };\r\n  return (\r\n    <Box className=\"login\">\r\n      <Center>\r\n        <h1>Sign Up</h1>\r\n      </Center>\r\n      <Divider />\r\n      <Center>\r\n        <GoogleLogin\r\n          className=\"google-login-button\"\r\n          clientId={GOOGLE_AUTH_CLIENT_ID}\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={\"single_host_origin\"}\r\n          render={(renderProps) => (\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n              leftIcon={<Icon as={FcGoogle} />}\r\n              className=\"google-login-button\"\r\n              onClick={renderProps.onClick}\r\n            >\r\n              SignUp with Google\r\n              {loading && <Spinner size=\"sm\" ml={3} />}\r\n            </Button>\r\n          )}\r\n        />\r\n      </Center>\r\n      {userAlreadyExistsError && (\r\n        <Alert status=\"warning\" alignItems=\"center\">\r\n          <AlertIcon />\r\n          <Box flex=\"1\">\r\n            <AlertTitle>You Already have an account</AlertTitle>\r\n            <AlertDescription display=\"block\">\r\n              Please use Login.\r\n            </AlertDescription>\r\n          </Box>\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\home\\home-page\\HomePage.jsx",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppHome.js",["100","101","102","103","104","105","106","107","108"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\AppNavBar.jsx",["109"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\theme.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AppOption.js",["110","111","112","113","114","115","116"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\calendar\\Calendar.js",["117"],"import React, { useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  RepeatIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport \"./Calendar.scss\";\r\n\r\nconst weekday = require(\"dayjs/plugin/weekday\");\r\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\r\n\r\ndayjs.extend(weekday);\r\ndayjs.extend(weekOfYear);\r\n\r\nconst WEEKDAYS = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst TODAY = dayjs().format(\"YYYY-MM-DD\");\r\n\r\nconst INITIAL_YEAR = dayjs().format(\"YYYY\");\r\nconst INITIAL_MONTH = dayjs().format(\"M\");\r\n\r\nlet selectedMonth = dayjs(new Date(INITIAL_YEAR, INITIAL_MONTH - 1, 1));\r\nlet currentMonthDays;\r\nlet previousMonthDays;\r\nlet nextMonthDays;\r\n\r\nfunction Calendar(props) {\r\n  useEffect(() => {\r\n    // effect\r\n\r\n    const daysOfWeekElement = document.getElementById(\"days-of-week\");\r\n\r\n    WEEKDAYS.forEach((weekday) => {\r\n      const weekDayElement = document.createElement(\"li\");\r\n      daysOfWeekElement.appendChild(weekDayElement);\r\n      weekDayElement.innerText = weekday;\r\n    });\r\n\r\n    createCalendar();\r\n    initMonthSelectors();\r\n\r\n    // add event listener for click\r\n\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   document.querySelectorAll(\".calendar-day span\").forEach((ele) => {\r\n  //     if (ele.getAttribute(\"value\") in props.selectedDate) {\r\n  //       ele.parentNode.classList.add(\"calendar-day--selected\");\r\n  //     }\r\n  //   });\r\n  //   return () => {};\r\n  // }, [props.selectedDate]);\r\n  function onDateClick() {\r\n    let clickedDate = this.getAttribute(\"value\");\r\n    // console.log(this.parentNode);\r\n    console.log(clickedDate);\r\n    if (clickedDate in props.selectedDate) {\r\n      this.parentNode.classList.remove(\"calendar-day--selected\");\r\n      props.removeSelectedDate(clickedDate,this.parentNode);\r\n    } else {\r\n      this.parentNode.classList.add(\"calendar-day--selected\");\r\n      props.addSelectedDate(clickedDate,this.parentNode);\r\n    }\r\n  }\r\n  function createCalendar(year = INITIAL_YEAR, month = INITIAL_MONTH) {\r\n    const calendarDaysElement = document.getElementById(\"calendar-days\");\r\n\r\n    document.getElementById(\"selected-month\").innerText = dayjs(\r\n      new Date(year, month - 1)\r\n    ).format(\"MMMM YYYY\");\r\n\r\n    removeAllDayElements(calendarDaysElement);\r\n\r\n    currentMonthDays = createDaysForCurrentMonth(\r\n      year,\r\n      month,\r\n      dayjs(`${year}-${month}-01`).daysInMonth()\r\n    );\r\n\r\n    previousMonthDays = createDaysForPreviousMonth(year, month);\r\n\r\n    nextMonthDays = createDaysForNextMonth(year, month);\r\n\r\n    const days = [...previousMonthDays, ...currentMonthDays, ...nextMonthDays];\r\n    days.forEach((day) => {\r\n      appendDay(day, calendarDaysElement);\r\n    });\r\n  }\r\n\r\n  function appendDay(day, calendarDaysElement) {\r\n    const dayElement = document.createElement(\"li\");\r\n    const dayElementClassList = dayElement.classList;\r\n    dayElementClassList.add(\"calendar-day\");\r\n    const dayOfMonthElement = document.createElement(\"span\");\r\n    dayOfMonthElement.innerText = day.dayOfMonth;\r\n    dayOfMonthElement.setAttribute(\"value\", day.date);\r\n    dayOfMonthElement.addEventListener(\"click\", onDateClick);\r\n\r\n    dayElement.appendChild(dayOfMonthElement);\r\n    calendarDaysElement.appendChild(dayElement);\r\n\r\n    if (!day.isCurrentMonth) {\r\n      dayElementClassList.add(\"calendar-day--not-current\");\r\n    }\r\n\r\n    if (day.date === TODAY) {\r\n      dayElementClassList.add(\"calendar-day--today\");\r\n    }\r\n    if (day.date in props.selectedDate) {\r\n      dayElementClassList.add(\"calendar-day--selected\");\r\n    }\r\n    // console.log(props.selectedDate)\r\n  }\r\n\r\n  function removeAllDayElements(calendarDaysElement) {\r\n    let first = calendarDaysElement.firstElementChild;\r\n\r\n    while (first) {\r\n      first.remove();\r\n      first = calendarDaysElement.firstElementChild;\r\n    }\r\n  }\r\n\r\n  function getNumberOfDaysInMonth(year, month) {\r\n    return dayjs(`${year}-${month}-01`).daysInMonth();\r\n  }\r\n\r\n  function createDaysForCurrentMonth(year, month) {\r\n    return [...Array(getNumberOfDaysInMonth(year, month))].map((day, index) => {\r\n      return {\r\n        date: dayjs(`${year}-${month}-${index + 1}`).format(\"YYYY-MM-DD\"),\r\n        dayOfMonth: index + 1,\r\n        isCurrentMonth: true,\r\n      };\r\n    });\r\n  }\r\n\r\n  function createDaysForPreviousMonth(year, month) {\r\n    const firstDayOfTheMonthWeekday = getWeekday(currentMonthDays[0].date);\r\n\r\n    const previousMonth = dayjs(`${year}-${month}-01`).subtract(1, \"month\");\r\n\r\n    // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\r\n    const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday\r\n      ? firstDayOfTheMonthWeekday - 1\r\n      : 6;\r\n\r\n    const previousMonthLastMondayDayOfMonth = dayjs(currentMonthDays[0].date)\r\n      .subtract(visibleNumberOfDaysFromPreviousMonth, \"day\")\r\n      .date();\r\n\r\n    return [...Array(visibleNumberOfDaysFromPreviousMonth)].map(\r\n      (day, index) => {\r\n        return {\r\n          date: dayjs(\r\n            `${previousMonth.year()}-${previousMonth.month() + 1}-${\r\n              previousMonthLastMondayDayOfMonth + index\r\n            }`\r\n          ).format(\"YYYY-MM-DD\"),\r\n          dayOfMonth: previousMonthLastMondayDayOfMonth + index,\r\n          isCurrentMonth: false,\r\n        };\r\n      }\r\n    );\r\n  }\r\n\r\n  function createDaysForNextMonth(year, month) {\r\n    const lastDayOfTheMonthWeekday = getWeekday(\r\n      `${year}-${month}-${currentMonthDays.length}`\r\n    );\r\n\r\n    const nextMonth = dayjs(`${year}-${month}-01`).add(1, \"month\");\r\n\r\n    const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\r\n      ? 7 - lastDayOfTheMonthWeekday\r\n      : lastDayOfTheMonthWeekday;\r\n\r\n    return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\r\n      return {\r\n        date: dayjs(\r\n          `${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`\r\n        ).format(\"YYYY-MM-DD\"),\r\n        dayOfMonth: index + 1,\r\n        isCurrentMonth: false,\r\n      };\r\n    });\r\n  }\r\n\r\n  function getWeekday(date) {\r\n    return dayjs(date).weekday();\r\n  }\r\n\r\n  function initMonthSelectors() {\r\n    document\r\n      .getElementById(\"previous-month-selector\")\r\n      .addEventListener(\"click\", function () {\r\n        selectedMonth = dayjs(selectedMonth).subtract(1, \"month\");\r\n        createCalendar(selectedMonth.format(\"YYYY\"), selectedMonth.format(\"M\"));\r\n      });\r\n\r\n    document\r\n      .getElementById(\"present-month-selector\")\r\n      .addEventListener(\"click\", function () {\r\n        selectedMonth = dayjs(new Date(INITIAL_YEAR, INITIAL_MONTH - 1, 1));\r\n        createCalendar(selectedMonth.format(\"YYYY\"), selectedMonth.format(\"M\"));\r\n      });\r\n\r\n    document\r\n      .getElementById(\"next-month-selector\")\r\n      .addEventListener(\"click\", function () {\r\n        selectedMonth = dayjs(selectedMonth).add(1, \"month\");\r\n        createCalendar(selectedMonth.format(\"YYYY\"), selectedMonth.format(\"M\"));\r\n      });\r\n  }\r\n\r\n  // console.log(props.selectedDate);\r\n  return (\r\n    <div className=\"calendar-month\">\r\n      <section className=\"calendar-month-header\">\r\n        <div\r\n          id=\"selected-month\"\r\n          className=\"calendar-month-header-selected-month\"\r\n        ></div>\r\n        <section className=\"calendar-month-header-selectors\">\r\n          {/* <span id=\"present-month-selector\">Today</span> */}\r\n          <span id=\"present-month-selector\" className=\"calendar-change-month-button\">\r\n            <RepeatIcon />\r\n          </span>\r\n          <span id=\"previous-month-selector\" className=\"calendar-change-month-button\">\r\n            <ChevronLeftIcon   w={6} h={6}/>\r\n          </span>\r\n          <span id=\"next-month-selector\" className=\"calendar-change-month-button\">\r\n            <ChevronRightIcon   w={6} h={6}/>\r\n          </span>\r\n        </section>\r\n      </section>\r\n\r\n      <ol id=\"days-of-week\" className=\"day-of-week\"></ol>\r\n\r\n      <ol id=\"calendar-days\" className=\"days-grid\"></ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\navbar-app\\DarkModeButton.jsx",["118","119"],"import React, { useEffect } from \"react\";\r\nimport { Button, useColorMode } from \"@chakra-ui/react\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nlet colorList = [\r\n  \"--primary-color\",\r\n  \"--primary-color-hover\",\r\n  // \"--primary-background-color\",\r\n  \"--secondary-background-color\",\r\n  \"--secondary-background-color-hover\",\r\n  \"--primary-font-color\",\r\n  // \"--secondary-font-color\",\r\n];\r\n\r\nfunction DarkModeButton() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  let toggleColorModeCustom = () => {\r\n    toggleColorMode();\r\n  };\r\n  let AdjustCustomColorMode = () => {\r\n    for (let i of colorList) {\r\n      document.documentElement.style.setProperty(\r\n        i,\r\n        colorMode === \"light\"\r\n          ? `var(--light-mode${i.slice(1)})`\r\n          : `var(--dark-mode${i.slice(1)})`\r\n      );\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    console.log(colorMode);\r\n    AdjustCustomColorMode();\r\n  }, [colorMode]);\r\n\r\n  useEffect(() => {\r\n    // effect\r\n    AdjustCustomColorMode();\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  return (\r\n    <Button\r\n      size=\"md\"\r\n      margin=\"5px\"\r\n      onClick={toggleColorModeCustom}\r\n      customColor=\"light-blue\"\r\n    >\r\n      {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default DarkModeButton;\r\n","D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\AddHabitModel.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\Constants.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\context\\GlobalState.js",["120","121","122","123","124"],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\DefaultRoute.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\authentication\\AppRoute.js",[],"D:\\Projects\\HT\\frontend\\habit-tracker-react\\src\\component\\app\\HabitView.js",["125","126"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { Box, Stack, Skeleton } from \"@chakra-ui/react\";\r\nimport \"./HabitView.scss\";\r\nimport Calendar from \"./calendar/Calendar\";\r\n\r\nimport { API_URL } from \"../../Constants\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction HabitView(props) {\r\n  const contextStore = useContext(GlobalContext);\r\n  let { habit_id } = useParams();\r\n  const [getHabitDateLoading, setGetHabitDateLoading] = useState(true);\r\n  const [currentHabitDate, setCurrentHabitDate] = useState(\r\n    props.habitsDateInfo[habit_id]\r\n  );\r\n\r\n  const addSelectedDate = (date, dateElement) => {\r\n    let currentHabitDateTemp = { ...currentHabitDate };\r\n    currentHabitDateTemp.dates[date] = true;\r\n    setCurrentHabitDate(currentHabitDateTemp);\r\n    props.addHabitsDateInfo(habit_id, currentHabitDateTemp);\r\n\r\n    axios\r\n      .post(API_URL + \"/api/habit-date/\" + habit_id, {\r\n        date: date,\r\n      })\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (\r\n          error.response &&\r\n          error.response.status === 401 &&\r\n          error.response.data === \"Unauthorized\"\r\n        ) {\r\n          contextStore.clearLoginDataAndRedirectToLogin();\r\n        } else {\r\n          let currentHabitDateTemp = { ...currentHabitDate };\r\n          delete currentHabitDateTemp.dates[date];\r\n          setCurrentHabitDate(currentHabitDateTemp);\r\n          dateElement.classList.remove(\"calendar-day--selected\");\r\n          contextStore.showUnexpectedError();\r\n        }\r\n      });\r\n  };\r\n  const removeSelectedDate = (date, dateElement) => {\r\n    let currentHabitDateTemp = { ...currentHabitDate };\r\n    delete currentHabitDateTemp.dates[date];\r\n    setCurrentHabitDate(currentHabitDateTemp);\r\n    props.addHabitsDateInfo(habit_id, currentHabitDateTemp);\r\n\r\n    axios\r\n      .delete(API_URL + \"/api/habit-date/\" + habit_id, {\r\n        data: {\r\n          date: date,\r\n        },\r\n      })\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (\r\n          error.response &&\r\n          error.response.status === 401 &&\r\n          error.response.data === \"Unauthorized\"\r\n        ) {\r\n          contextStore.clearLoginDataAndRedirectToLogin();\r\n        } else {\r\n          let currentHabitDateTemp = { ...currentHabitDate };\r\n          currentHabitDateTemp.dates[date] = true;\r\n          setCurrentHabitDate(currentHabitDateTemp);\r\n          dateElement.classList.add(\"calendar-day--selected\");\r\n          contextStore.showUnexpectedError();\r\n        }\r\n      });\r\n  };\r\n  let getHabitDate = () => {\r\n    if (!currentHabitDate) {\r\n      setGetHabitDateLoading(true);\r\n      axios\r\n        .get(API_URL + \"/api/habit-date/\" + habit_id)\r\n        .then((response) => {\r\n          setGetHabitDateLoading(false);\r\n          setCurrentHabitDate(response.data);\r\n          props.addHabitsDateInfo(habit_id, response.data);\r\n        })\r\n        .catch((error) => {\r\n          setGetHabitDateLoading(false);\r\n          console.log(error);\r\n          if (\r\n            error.response &&\r\n            error.response.status === 401 &&\r\n            error.response.data === \"Unauthorized\"\r\n          ) {\r\n            contextStore.clearLoginDataAndRedirectToLogin();\r\n          } else {\r\n            contextStore.showUnexpectedError();\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // effect\r\n    // console.log(habit_id);\r\n    getHabitDate();\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n  return (\r\n    <Box className=\"app-content\">\r\n      {!currentHabitDate ? (\r\n        <Stack m={10}>\r\n          <Skeleton height=\"30px\" mb={10} />\r\n          {/* <Skeleton height=\"200px\" /> */}\r\n          <Skeleton height=\"20px\" />\r\n          <Skeleton height=\"20px\" />\r\n          <Skeleton height=\"20px\" />\r\n          <Skeleton height=\"20px\" />\r\n          <Skeleton height=\"20px\" />\r\n        </Stack>\r\n      ) : (\r\n        <>\r\n          <h2>{currentHabitDate.habit_name}</h2>\r\n          <Calendar\r\n            selectedDate={currentHabitDate.dates}\r\n            addSelectedDate={addSelectedDate}\r\n            removeSelectedDate={removeSelectedDate}\r\n          />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HabitView;\r\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":27,"nodeType":"133","messageId":"134","endLine":3,"endColumn":33},{"ruleId":"131","severity":1,"message":"135","line":3,"column":43,"nodeType":"133","messageId":"134","endLine":3,"endColumn":48},{"ruleId":"131","severity":1,"message":"136","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"137","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":11},{"ruleId":"131","severity":1,"message":"136","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"138","line":1,"column":28,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"139","line":6,"column":3,"nodeType":"133","messageId":"134","endLine":6,"endColumn":9},{"ruleId":"131","severity":1,"message":"140","line":7,"column":3,"nodeType":"133","messageId":"134","endLine":7,"endColumn":13},{"ruleId":"131","severity":1,"message":"141","line":8,"column":3,"nodeType":"133","messageId":"134","endLine":8,"endColumn":15},{"ruleId":"131","severity":1,"message":"142","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":15},{"ruleId":"131","severity":1,"message":"143","line":10,"column":3,"nodeType":"133","messageId":"134","endLine":10,"endColumn":16},{"ruleId":"131","severity":1,"message":"144","line":11,"column":3,"nodeType":"133","messageId":"134","endLine":11,"endColumn":16},{"ruleId":"131","severity":1,"message":"145","line":12,"column":3,"nodeType":"133","messageId":"134","endLine":12,"endColumn":20},{"ruleId":"131","severity":1,"message":"146","line":13,"column":3,"nodeType":"133","messageId":"134","endLine":13,"endColumn":9},{"ruleId":"131","severity":1,"message":"147","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":27},{"ruleId":"131","severity":1,"message":"148","line":1,"column":50,"nodeType":"133","messageId":"134","endLine":1,"endColumn":65},{"ruleId":"131","severity":1,"message":"149","line":2,"column":19,"nodeType":"133","messageId":"134","endLine":2,"endColumn":29},{"ruleId":"131","severity":1,"message":"141","line":14,"column":3,"nodeType":"133","messageId":"134","endLine":14,"endColumn":15},{"ruleId":"131","severity":1,"message":"150","line":20,"column":20,"nodeType":"133","messageId":"134","endLine":20,"endColumn":34},{"ruleId":"131","severity":1,"message":"151","line":20,"column":36,"nodeType":"133","messageId":"134","endLine":20,"endColumn":48},{"ruleId":"131","severity":1,"message":"152","line":29,"column":10,"nodeType":"133","messageId":"134","endLine":29,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":101,"column":6,"nodeType":"155","endLine":101,"endColumn":8,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":47,"column":6,"nodeType":"155","endLine":47,"endColumn":8,"suggestions":"158"},{"ruleId":"153","severity":1,"message":"159","line":34,"column":6,"nodeType":"155","endLine":34,"endColumn":17,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"161","line":42,"column":6,"nodeType":"155","endLine":42,"endColumn":8,"suggestions":"162"},{"ruleId":"131","severity":1,"message":"163","line":1,"column":53,"nodeType":"133","messageId":"134","endLine":1,"endColumn":59},{"ruleId":"131","severity":1,"message":"136","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"149","line":2,"column":16,"nodeType":"133","messageId":"134","endLine":2,"endColumn":26},{"ruleId":"131","severity":1,"message":"164","line":3,"column":20,"nodeType":"133","messageId":"134","endLine":3,"endColumn":23},{"ruleId":"131","severity":1,"message":"165","line":3,"column":24,"nodeType":"133","messageId":"134","endLine":3,"endColumn":37},{"ruleId":"131","severity":1,"message":"166","line":16,"column":10,"nodeType":"133","messageId":"134","endLine":16,"endColumn":29},{"ruleId":"153","severity":1,"message":"167","line":112,"column":6,"nodeType":"155","endLine":112,"endColumn":8,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'useToast' is defined but never used.","'useState' is defined but never used.","'Drawer' is defined but never used.","'DrawerBody' is defined but never used.","'DrawerFooter' is defined but never used.","'DrawerHeader' is defined but never used.","'DrawerOverlay' is defined but never used.","'DrawerContent' is defined but never used.","'DrawerCloseButton' is defined but never used.","'Button' is defined but never used.","'useContext' is defined but never used.","'useLayoutEffect' is defined but never used.","'useHistory' is defined but never used.","'SkeletonCircle' is defined but never used.","'SkeletonText' is defined but never used.","'size' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getHabit'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has missing dependencies: 'createCalendar' and 'initMonthSelectors'. Either include them or remove the dependency array.",["172"],"React Hook React.useEffect has a missing dependency: 'AdjustCustomColorMode'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'AdjustCustomColorMode'. Either include it or remove the dependency array.",["174"],"'useRef' is defined but never used.","'Box' is defined but never used.","'useDisclosure' is defined but never used.","'getHabitDateLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getHabitDate'. Either include it or remove the dependency array.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [getHabit]",{"range":"186","text":"187"},"Update the dependencies array to be: [createCalendar, initMonthSelectors]",{"range":"188","text":"189"},"Update the dependencies array to be: [AdjustCustomColorMode, colorMode]",{"range":"190","text":"191"},"Update the dependencies array to be: [AdjustCustomColorMode]",{"range":"192","text":"193"},"Update the dependencies array to be: [getHabitDate]",{"range":"194","text":"195"},[2807,2809],"[getHabit]",[1193,1195],"[createCalendar, initMonthSelectors]",[932,943],"[AdjustCustomColorMode, colorMode]",[1066,1068],"[AdjustCustomColorMode]",[3622,3624],"[getHabitDate]"]